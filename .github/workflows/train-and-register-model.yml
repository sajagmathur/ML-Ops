name: Train, Register, and Deploy Model
permissions:
  contents: write

on:
  push:
    branches: [Day10, main]
  workflow_dispatch:

jobs:
  train-model:
    runs-on: IceCream

    steps:
      - uses: actions/checkout@v3

      - name: Create Python environment
        shell: powershell
        run: |
          $envPath = "$env:USERPROFILE\actions-cache\env"
          if (-not (Test-Path $envPath)) {
            python -m venv $envPath
          }

      - name: Install Python dependencies
        shell: powershell
        run: |
          $envPath = "$env:USERPROFILE\actions-cache\env"
          & "$envPath\Scripts\Activate.ps1"
          Set-Location -Path Day10/workshop
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Train Model
        shell: powershell
        run: |
          $envPath = "$env:USERPROFILE\actions-cache\env"
          & "$envPath\Scripts\Activate.ps1"
          pip install --quiet pandas scikit-learn joblib
          Set-Location -Path Day10/workshop
          python trainmodel.py

      - name: Upload model artifacts
        uses: actions/upload-artifact@v4
        with:
          name: model-artifacts
          path: |
            Day10/workshop/model.pkl
            Day10/workshop/test_data.pkl

      - name: Commit and push model.pkl to repo
        shell: powershell
        run: |
          Set-Location -Path Day10/workshop
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add model.pkl test_data.pkl
          git commit -m "Add trained model artifacts"
          git push

  register-model:
    runs-on: IceCream
    needs: train-model

    steps:
      - uses: actions/checkout@v3

      - name: Download model artifacts
        uses: actions/download-artifact@v4
        with:
          name: model-artifacts
          path: Day10/workshop

      - name: Create Python environment
        shell: powershell
        run: |
          $envPath = "$env:USERPROFILE\actions-cache\env"
          if (-not (Test-Path $envPath)) {
            python -m venv $envPath
          }

      - name: Register Model with MLflow
        shell: powershell
        run: |
          $envPath = "$env:USERPROFILE\actions-cache\env"
          & "$envPath\Scripts\Activate.ps1"
          pip install --quiet mlflow scikit-learn joblib
          Set-Location -Path Day10/workshop
          python registermodel.py

  run-fastapi:
    runs-on: ubuntu-latest
    needs: register-model

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.12.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.12.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r Day10/workshop/requirements.txt

      - name: Run FastAPI app
        run: python app.py
        working-directory: Day10/workshop
  build-docker-image:
    runs-on: ubuntu-latest
    needs: register-model   # wait for register-model to finish

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          docker build -t icecream-api:latest -f Day10/workshop/Dockerfile Day10/workshop