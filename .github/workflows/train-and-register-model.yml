name: Train, Register, and Deploy Model

on:
  push:
    branches: [Day10]

jobs:
  train-model:
    runs-on: IceCream

    steps:
      - uses: actions/checkout@v3

      - name: Set Execution Policy
        run: Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Scope Process -Force
        shell: powershell

      - name: Create Python environment
        shell: powershell
        run: |
          $envPath = "$env:USERPROFILE\actions-cache\env"
          if (-not (Test-Path $envPath)) {
            python -m venv $envPath
          }

      - name: Train Model
        shell: powershell
        run: |
          $envPath = "$env:USERPROFILE\actions-cache\env"
          & "$envPath\Scripts\Activate.ps1"
          pip install --quiet pandas scikit-learn joblib
          Set-Location Day10/workshop
          python 1_train_model.py

      - name: Upload model artifacts
        uses: actions/upload-artifact@v3
        with:
          name: model-artifacts
          path: |
            Day10/workshop/model.pkl
            Day10/workshop/test_data.pkl

  register-model:
    runs-on: IceCream
    needs: train-model

    steps:
      - uses: actions/checkout@v3

      - name: Download model artifacts
        uses: actions/download-artifact@v3
        with:
          name: model-artifacts
          path: Day10/workshop

      - name: Set Execution Policy
        run: Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Scope Process -Force
        shell: powershell

      - name: Create Python environment
        shell: powershell
        run: |
          $envPath = "$env:USERPROFILE\actions-cache\env"
          if (-not (Test-Path $envPath)) {
            python -m venv $envPath
          }

      - name: Register Model with MLflow
        shell: powershell
        run: |
          $envPath = "$env:USERPROFILE\actions-cache\env"
          & "$envPath\Scripts\Activate.ps1"
          pip install --quiet mlflow scikit-learn joblib
          Set-Location Day10/workshop
          python 2_register_model.py

  dockerize-model:
    runs-on: IceCream
    needs: register-model

    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/icecream-api:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/icecream-api:latest
      