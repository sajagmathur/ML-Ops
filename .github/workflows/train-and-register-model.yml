name: Train, Register, and Deploy Model

on:
  push:
    branches: [Day10]

jobs:
  train-model:
    runs-on: IceCream

    steps:
      - uses: actions/checkout@v3

      - name: Create Python environment
        shell: powershell
        run: |
          $envPath = "$env:USERPROFILE\actions-cache\env"
          if (-not (Test-Path $envPath)) {
            python -m venv $envPath
          }

      - name: Train Model
        shell: powershell
        run: |
          $envPath = "$env:USERPROFILE\actions-cache\env"
          & "$envPath\Scripts\Activate.ps1"
          pip install --quiet pandas scikit-learn joblib
          Set-Location -Path Day10/workshop
          python 1_train_model.py

      - name: Upload model artifacts
        uses: actions/upload-artifact@v4
        with:
          name: model-artifacts
          path: |
            Day10/workshop/model.pkl
            Day10/workshop/test_data.pkl

  register-model:
    runs-on: IceCream
    needs: train-model

    steps:
      - uses: actions/checkout@v3

      - name: Download model artifacts
        uses: actions/download-artifact@v4
        with:
          name: model-artifacts
          path: Day10/workshop

      - name: Create Python environment
        shell: powershell
        run: |
          $envPath = "$env:USERPROFILE\actions-cache\env"
          if (-not (Test-Path $envPath)) {
            python -m venv $envPath
          }

      - name: Register Model with MLflow
        shell: powershell
        run: |
          $envPath = "$env:USERPROFILE\actions-cache\env"
          & "$envPath\Scripts\Activate.ps1"
          pip install --quiet mlflow scikit-learn joblib
          Set-Location -Path Day10/workshop
          python 2_register_model.py

  dockerize-model:
      
    runs-on: IceCream
    needs: register-model

    steps:
      - uses: actions/checkout@v3

      - name: Build Docker image locally
        shell: powershell
        run: |
          $imageName = "icecream-api:latest"
          docker build -t $imageName .

      - name: Stop and remove existing container if it exists
        shell: powershell
        run: |
          $containerName = "icecream-api"
          docker stop $containerName 2>$null
          docker rm $containerName 2>$null

      - name: Run Docker container locally
        shell: powershell
        run: |
          $imageName = "icecream-api:latest"
          docker build -t $imageName Day10/workshop

      - name: Confirm container is running
        shell: powershell
        run: |
          docker ps -f "name=icecream-api"

    